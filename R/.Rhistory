mutate(
gross_profit = sell - purchase,
tax = net_profit * .3,
agent = agent_fixed + .08 * (sell - 2.2e6)
nett_profit = gross_profit - tax - agent
)
prices <- data.frame(
sell = seq(purchase, 2.5e6, length.out = 100)
) %>%
mutate(
gross_profit = sell - purchase,
tax = net_profit * .3,
agent = agent_fixed + .08 * (sell - 2.2e6),
nett_profit = gross_profit - tax - agent
)
library(tidyverse)
prices <- data.frame(
sell = seq(purchase, 2.5e6, length.out = 100)
) %>%
mutate(
gross_profit = sell - purchase,
tax = net_profit * .3,
agent = agent_fixed + .08 * (sell - 2.2e6),
nett_profit = gross_profit - tax - agent
)
prices <- data.frame(
sell = seq(purchase, 2.5e6, length.out = 100)
) %>%
mutate(
gross_profit = sell - purchase,
tax = gross_profit * .3,
agent = agent_fixed + .08 * (sell - 2.2e6),
nett_profit = gross_profit - tax - agent
)
matplot(prices, type="l", lty=1)
price %>%
gather(Metic, Value, gross_profit:nett_profit) %>%
ggplot(aes(x = sell, y = Value, colour = Metric)) +
geom_line()
prices %>%
gather(Metic, Value, gross_profit:nett_profit) %>%
ggplot(aes(x = sell, y = Value, colour = Metric)) +
geom_line()
prices %>%
gather(Metric, Value, gross_profit:nett_profit) %>%
ggplot(aes(x = sell, y = Value, colour = Metric)) +
geom_line()
prices <- data.frame(
sell = seq(purchase, 2.6e6, length.out = 100)
) %>%
mutate(
gross_profit = sell - purchase,
tax = gross_profit * .3,
agent = agent_fixed + .08 * (sell - 2.2e6),
nett_profit = gross_profit - tax - agent
)
prices %>%
gather(Metric, Value, gross_profit:nett_profit) %>%
ggplot(aes(x = sell, y = Value, colour = Metric)) +
geom_line()
prices %>%
gather(Metric, Value, gross_profit:nett_profit) %>%
ggplot(aes(x = sell, y = Value, colour = Metric)) +
geom_line() +
scale_y_continuous(labels = function(y) sprintf("%.1fM", y/1e6))
prices %>%
gather(Metric, Value, gross_profit:nett_profit) %>%
ggplot(aes(x = sell, y = Value, colour = Metric)) +
geom_line() +
scale_y_continuous(labels = function(y) sprintf("%.1fmkr", y/1e6))
mkr <- function(y) sprintf("%.1fmkr", y/1e6)
prices %>%
gather(Metric, Value, gross_profit:nett_profit) %>%
ggplot(aes(x = sell, y = Value, colour = Metric)) +
geom_line() +
scale_x_continuous(labels = mkr)
scale_y_continuous(labels = mkr)
prices %>%
gather(Metric, Value, gross_profit:nett_profit) %>%
ggplot(aes(x = sell, y = Value, colour = Metric)) +
geom_line() +
scale_x_continuous(labels = mkr) +
scale_y_continuous(labels = mkr)
prices <- data.frame(
sell = seq(purchase, 2.6e6, length.out = 100)
) %>%
mutate(
gross_profit = sell - purchase,
tax = gross_profit * .3,
agent = agent_fixed + .08 * pmax(0, sell - 2.2e6),
nett_profit = gross_profit - tax - agent
)
mkr <- function(y) sprintf("%.1fmkr", y/1e6)
prices %>%
gather(Metric, Value, gross_profit:nett_profit) %>%
ggplot(aes(x = sell, y = Value, colour = Metric)) +
geom_line() +
scale_x_continuous(labels = mkr) +
scale_y_continuous(labels = mkr)
mkr <- function(y) sprintf("%.1fmkr", y/1e6)
tkr <- function(y) sprintf("%itkr", round(y/1e3))
prices %>%
gather(Metric, Value, gross_profit:nett_profit) %>%
ggplot(aes(x = sell, y = Value, colour = Metric)) +
geom_line() +
scale_x_continuous(labels = mkr) +
scale_y_continuous(labels = mkr)
prices %>%
gather(Metric, Value, gross_profit:nett_profit) %>%
ggplot(aes(x = sell, y = Value, colour = Metric)) +
geom_line() +
scale_x_continuous(labels = mkr) +
scale_y_continuous(labels = tkr)
mkr <- function(y) sprintf("%.1f mkr", y/1e6)
tkr <- function(y) sprintf("%i tkr", round(y/1e3))
prices %>%
gather(Metric, Value, gross_profit:nett_profit) %>%
ggplot(aes(x = sell, y = Value, colour = Metric)) +
geom_line() +
scale_x_continuous(labels = mkr) +
scale_y_continuous(labels = tkr)
source('~/.active-rstudio-document')
cum_geo_mean <- function(x) exp(cumsum(log(x))/seq_along(x))
x <- apply(matrix(rnorm(10*400), 400, 10), 2, cum_geo_mean)
curve(rgamma(x, 1, 1), 0, 10)
curve(dgamma(x, 1, 1), 0, 10)
curve(dgamma(x, 3, 1), 0, 10)
x <- apply(matrix(rgamma(10*400, 3, 1), 400, 10), 2, cum_geo_mean)
matplot(x)
matplot(x, type="l")
matplot(x, type="l", xlim=c(1, 50))
x <- apply(matrix(rgamma(10*400, 3, 1), 400, 10), 2, cum_geo_mean)
matplot(x, type="l", xlim=c(1, 50))
x <- apply(matrix(rgamma(10*400, 3, 1), 400, 10), 2, cum_geo_mean)
matplot(x, type="l", xlim=c(1, 50))
x <- apply(matrix(rgamma(10*400, 3, 1), 400, 10), 2, cum_geo_mean)
matplot(x, type="l", xlim=c(1, 50))
p <- matrix(rgamma(10*400, 3, 1), 400, 10)
h <- apply(p, 2, cum_geo_mean)
matplot(h, type="l", xlim=c(1, 50))
setwd("~/devel/treesmapstheorems/R")
source('~/devel/treesmapstheorems/R/radicals.R')
source('~/devel/treesmapstheorems/R/colours.R')
#' @importFrom grid unit
base_theme <- function(base_size = 10){
theme_bw(base_size = base_size) +
theme(
legend.key.size = unit(3, "mm")
)
}
line_theme <- function(base_size = 10){
axes <- tmt_axis(label = "xy", line = "", ticks = "xy", title = "XY")
panel <- tmt_panel(box = TRUE, grid = "xy")
base_theme(base_size = base_size) + do.call(theme, c(axes, panel))
}
plot_data <- data.frame(
x = 0:100,
y = cumsum(rnorm(101))
)
p <- ggplot(plot_data, aes(x = x, y = y)) +
geom_line()
p + line_theme(24)
library(ggplot
library(ggplot2)
p <- ggplot(plot_data, aes(x = x, y = y)) +
geom_line()
p + line_theme(24)
source('~/devel/treesmapstheorems/R/colours.R')
p <- ggplot(plot_data, aes(x = x, y = y)) +
geom_line()
p + line_theme(24)
source('~/devel/treesmapstheorems/R/colours.R')
source('~/devel/treesmapstheorems/R/colours.R')
source('~/devel/treesmapstheorems/R/radicals.R')
p + line_theme(24)
source('~/devel/treesmapstheorems/R/colours.R')
p + line_theme(24)
source('~/devel/treesmapstheorems/R/colours.R')
p + line_theme(24)
source('~/devel/treesmapstheorems/R/colours.R')
p + line_theme(24)
colors()
demo(colors)
source('~/devel/treesmapstheorems/R/radicals.R')
p + line_theme(24)
source('~/devel/treesmapstheorems/R/colours.R')
p + line_theme(24)
source('~/devel/treesmapstheorems/R/colours.R')
p + line_theme(24)
source('~/devel/treesmapstheorems/R/radicals.R')
p + line_theme(24)
source('~/devel/treesmapstheorems/R/colours.R')
p + line_theme(24)
source('~/devel/treesmapstheorems/R/radicals.R')
p + line_theme(24)
source('~/devel/treesmapstheorems/R/colours.R')
p + line_theme(24)
source('~/devel/treesmapstheorems/R/radicals.R')
p + line_theme(24)
?element_rect
source('~/devel/treesmapstheorems/R/radicals.R')
p + line_theme(24)
source('~/devel/treesmapstheorems/R/radicals.R')
line_theme <- function(base_size = 10){
axes <- tmt_axis(label = "xy", line = "", ticks = "xy", title = "XY")
panel <- tmt_panel(box = TRUE, grid = "xy")
base_theme(base_size = base_size) + do.call(theme, c(axes, panel))
}
p <- ggplot(plot_data, aes(x = x, y = y)) +
geom_line() +
scale_x_continuous(breaks = c(0, 100)) +
scale_y_continuous(breaks = c(0, range(plot_data$y)))
p + line_theme(24)
line_theme <- function(base_size = 10, grid="xy"){
axes <- tmt_axis(label = "xy", line = "", ticks = "xy", title = "XY")
panel <- tmt_panel(box = TRUE, grid = grid)
base_theme(base_size = base_size) + do.call(theme, c(axes, panel))
}
p + line_theme(24)
p + line_theme(24, grid="")
plot_data <- data.frame(
x = 0:100,
y = cumsum(rnorm(101))
)
p <- ggplot(plot_data, aes(x = x, y = y)) +
geom_line() +
scale_x_continuous(breaks = c(0, 100)) +
scale_y_continuous(
breaks = c(0, range(plot_data$y)),
labels = function(x) sprintf("%.2f", x)
)
p + line_theme(24, grid="")
open_line_theme <- function(base_size = 10){
tmt_theme(base_size = base_size, axis.line = "", axis.text = "xy",
axis.ticks = "", axis.title = "XY", panel.border = FALSE, panel.grid = "y")
}
p + line_theme(24, box=TRUE)
line_theme <- function(base_size = 10, box){
if(box){
tmt_theme(base_size = base_size, axis.line = "", axis.text = "xy",
axis.ticks = "xy", axis.title = "XY", panel.border = TRUE, panel.grid = "")
} else {
tmt_theme(base_size = base_size, axis.line = "", axis.text = "xy",
axis.ticks = "", axis.title = "XY", panel.border = FALSE, panel.grid = "y")
}
}
p + line_theme(24, box=TRUE)
source('~/devel/treesmapstheorems/R/themes.R')
p + line_theme(24, box=TRUE)
source('~/devel/treesmapstheorems/R/radicals.R')
p + line_theme(24, box=TRUE)
source('~/devel/treesmapstheorems/R/radicals.R')
p + line_theme(24, box=TRUE)
p + line_theme(24, box=FALSE)
tmt_theme(base_size = base_size, axis.line = "", axis.text = "xy",
axis.ticks = "", axis.title = "XY", panel.border = FALSE, panel.grid = "y")
line_theme(24, box=FALSE)
line_theme(24, box=FALSE)$axis.line.y
line_theme(24, box=FALSE)$axis.line.x
source('~/devel/treesmapstheorems/R/radicals.R')
p + line_theme(24, box=FALSE)
debug(tmt_axis)
p + line_theme(24, box=FALSE)
line
source('~/devel/treesmapstheorems/R/radicals.R')
source('~/devel/treesmapstheorems/R/themes.R')
p + line_theme(24, box=FALSE)
curve(dgamma(x, .1, 3))
curve(dgamma(x, .1, 1))
curve(dgamma(x, .01, 1))
curve(dgamma(x, .01, .1))
curve(dgamma(x, .01, 10))
)
plot_data <- data.frame(
x = 0:100,
y = cumsum(rnorm(101)),
s = cumsum(rgamma(101, .01, 100))
)
plot_data <- data.frame(
x = 0:100,
y = cumsum(rnorm(101)),
s = cumsum(rgamma(101, .01, 100))
)
p <- ggplot(plot_data, aes(x = x, y = y)) +
geom_line() +
geom_ribbon(aes(ymin = y - s, ymax = y + s), colour = "#00000022") +
scale_x_continuous(breaks = c(0, 100)) +
scale_y_continuous(
breaks = c(0, range(plot_data$y)),
labels = function(x) sprintf("%.2f", x)
)
p + line_theme(24, box=FALSE)
p + line_theme(24, box=TRUE)
set.seed(123)
plot_data <- data.frame(
x = 0:100,
y = cumsum(rnorm(101)),
s = cumsum(rgamma(101, .01, 100))
)
p <- ggplot(plot_data, aes(x = x, y = y)) +
geom_line() +
geom_ribbon(aes(ymin = y - s, ymax = y + s), colour = "#00000022") +
scale_x_continuous(breaks = c(0, 100)) +
scale_y_continuous(
breaks = c(0, range(plot_data$y)),
labels = function(x) sprintf("%.2f", x)
)
p + line_theme(24, box=TRUE)
geom_ribbon
set.seed(123)
plot_data <- data.frame(
x = 0:100,
y = cumsum(rnorm(101)),
s = cumsum(rgamma(101, .1, 10))
)
p <- ggplot(plot_data, aes(x = x, y = y)) +
geom_line() +
geom_ribbon(aes(ymin = y - s, ymax = y + s), colour = "#00000022") +
scale_x_continuous(breaks = c(0, 100)) +
scale_y_continuous(
breaks = c(0, range(plot_data$y)),
labels = function(x) sprintf("%.2f", x)
)
p + line_theme(24, box=TRUE)
plot_data <- data.frame(
x = 0:100,
y = cumsum(rnorm(101)),
s = cumsum(rgamma(101, .1, 10))
)
p <- ggplot(plot_data, aes(x = x, y = y)) +
geom_line() +
geom_ribbon(aes(ymin = y - s, ymax = y + s), fill = "#00000022") +
scale_x_continuous(breaks = c(0, 100)) +
scale_y_continuous(
breaks = c(0, range(plot_data$y)),
labels = function(x) sprintf("%.2f", x)
)
p + line_theme(24, box=TRUE)
p + line_theme(24, box=FALSE)
set.seed(123)
plot_data <- data.frame(
x = 0:100,
y = cumsum(rnorm(101)),
s = cumsum(rgamma(101, .1, 10))
)
p <- ggplot(plot_data, aes(x = x, y = y)) +
geom_line() +
geom_ribbon(aes(ymin = y - s, ymax = y + s), fill = "#00000022") +
scale_x_continuous(breaks = c(0, 100)) +
scale_y_continuous(
breaks = c(0, range(plot_data$y)),
labels = function(x) sprintf("%.2f", x)
)
p + line_theme(24, box=TRUE)
p + line_theme(24, box=FALSE)
set.seed(123)
plot_data <- data.frame(
Time = 0:100,
Estimate = cumsum(rnorm(101)),
s = cumsum(rgamma(101, .1, 10))
)
p <- ggplot(plot_data, aes(x = Time, y = Estimate)) +
geom_line() +
geom_ribbon(aes(ymin = y - s, ymax = y + s), fill = "#00000022") +
scale_x_continuous(breaks = c(0, 100)) +
scale_y_continuous(
breaks = c(0, range(plot_data$y)),
labels = function(x) sprintf("%.2f", x)
)
p + line_theme(24, box=TRUE)
p <- ggplot(plot_data, aes(x = Time, y = Estimate)) +
geom_line() +
geom_ribbon(aes(ymin = Estimate - s, ymax = Estimate + s), fill = "#00000022") +
scale_x_continuous(breaks = c(0, 100)) +
scale_y_continuous(
breaks = c(0, range(plot_data$y)),
labels = function(x) sprintf("%.2f", x)
)
p + line_theme(24, box=TRUE)
p <- ggplot(plot_data, aes(x = Time, y = Estimate)) +
geom_line() +
geom_ribbon(aes(ymin = Estimate - s, ymax = Estimate + s), fill = "#00000022") +
scale_x_continuous(breaks = c(0, 100)) +
scale_y_continuous(
breaks = c(0, range(plot_data$Estimate)),
labels = function(x) sprintf("%.2f", x)
)
p + line_theme(24, box=TRUE)
p + geom_hline(yintercept = 0, colour = faint_colour) + line_theme(24, box=TRUE)
geom_hline(yintercept = 0, colour = faint_colour) + p + line_theme(24, box=TRUE)
p + geom_hline(yintercept = 0, colour = faint_colour) +
line_layers +
line_theme(24, box=TRUE)
p <- ggplot(plot_data, aes(x = Time, y = Estimate))
line_layers <- geom_line() +
geom_ribbon(aes(ymin = Estimate - s, ymax = Estimate + s), fill = "#00000022") +
scale_x_continuous(breaks = c(0, 100)) +
scale_y_continuous(
breaks = c(0, range(plot_data$Estimate)),
labels = function(x) sprintf("%.2f", x)
)
p + geom_hline(yintercept = 0, colour = faint_colour) +
line_layers +
line_theme(24, box=TRUE)
line_layers <- geom_line() +
geom_ribbon(aes(ymin = Estimate - s, ymax = Estimate + s), fill = "#00000022") +
scale_x_continuous(breaks = c(0, 100)) +
scale_y_continuous(
breaks = c(0, range(plot_data$Estimate)),
labels = function(x) sprintf("%.2f", x)
)
p + line_theme(24, box=TRUE)
p <- ggplot(plot_data, aes(x = Time, y = Estimate)) +
geom_line() +
geom_ribbon(aes(ymin = Estimate - s, ymax = Estimate + s), fill = "#00000022") +
scale_x_continuous(breaks = c(0, 100)) +
scale_y_continuous(
breaks = c(0, range(plot_data$Estimate)),
labels = function(x) sprintf("%.2f", x)
)
p + line_theme(24, box=FALSE)
p + scale_y_continuous(expand = c(0, 0)) + line_theme(24, box=FALSE)
p + scale_y_continuous(expand = c(0, 0)) + line_theme(24, box=FALSE)
p + line_theme(24, box=FALSE)
line_theme <- function(base_size = 10, box){
if(box){
tmt_theme(base_size = base_size, axis.line = "", axis.text = "xy",
axis.ticks = "xy", axis.title = "XY", panel.border = TRUE, panel.grid = "")
} else {
tmt_theme(base_size = base_size, axis.line = "y", axis.text = "xy",
axis.ticks = "y", axis.title = "XY", panel.border = FALSE, panel.grid = "y")
}
}
p + line_theme(24, box=FALSE)
p <- ggplot(plot_data, aes(x = Time, y = Estimate)) +
geom_line() +
geom_ribbon(aes(ymin = Estimate - s, ymax = Estimate + s), fill = "#00000022") +
scale_x_continuous(breaks = c(0, 100)) +
scale_y_continuous(
breaks = c(0, range(plot_data$Estimate)),
labels = function(x) sprintf("$%.2f", x)
)
p + line_theme(16, box=FALSE)
p <- ggplot(plot_data, aes(x = Time, y = Estimate)) +
geom_line() +
geom_ribbon(aes(ymin = Estimate - s, ymax = Estimate + s), fill = "#00000022") +
scale_x_continuous(breaks = c(0, 100)) +
scale_y_continuous(
breaks = c(0, range(plot_data$Estimate)),
labels = function(x) sprintf("%.2f USD", x)
)
p + line_theme(16, box=FALSE)
plot_data <- data.frame(
Time = as.Date('2016-01-01') + 0:100,
Estimate = cumsum(rnorm(101)),
s = cumsum(rgamma(101, .1, 10))
)
p <- ggplot(plot_data, aes(x = Time, y = Estimate)) +
geom_line() +
geom_ribbon(aes(ymin = Estimate - s, ymax = Estimate + s), fill = "#00000022") +
scale_x_continuous(breaks = c(0, 100)) +
scale_y_continuous(
breaks = c(0, range(plot_data$Estimate)),
labels = function(x) sprintf("%.2f USD", x)
)
p + line_theme(16, box=FALSE)
p <- ggplot(plot_data, aes(x = Time, y = Estimate)) +
geom_line() +
geom_ribbon(aes(ymin = Estimate - s, ymax = Estimate + s), fill = "#00000022") +
scale_x_date(breaks = range(plot_data$Time)) +
scale_y_continuous(
breaks = c(0, range(plot_data$Estimate)),
labels = function(x) sprintf("%.2f USD", x)
)
p + line_theme(16, box=FALSE)
set.seed(123)
plot_data <- data.frame(
Time = as.Date('2016-01-01') + 0:100,
Estimate = cumsum(rnorm(101)),
s = cumsum(rgamma(101, .1, 10))
)
p <- ggplot(plot_data, aes(x = Time, y = Estimate)) +
geom_line() +
geom_ribbon(aes(ymin = Estimate - s, ymax = Estimate + s), fill = "#00000022") +
scale_x_date(breaks = range(plot_data$Time)) +
scale_y_continuous(
breaks = c(0, range(plot_data$Estimate)),
labels = function(x) sprintf("%.2f USD", x)
)
p + line_theme(16, box=TRUE)
p + line_theme(16, box=FALSE)
source('~/devel/treesmapstheorems/R/radicals.R')
p + line_theme(16, box=FALSE)
p + line_theme(16, box=TRUE)
source('~/devel/treesmapstheorems/R/radicals.R')
p + line_theme(16, box=FALSE)
p + line_theme(16, box=TRUE)
source('~/devel/treesmapstheorems/R/themes.R')
p + line_theme(16, box=TRUE)
p + line_theme(16, box=FALSE)
p + line_theme(16, box=TRUE, grid="y")
source('~/devel/treesmapstheorems/R/themes.R')
p + line_theme(16, box=TRUE, grid="y")
p <- ggplot(plot_data, aes(x = Time, y = Estimate)) +
geom_line() +
geom_ribbon(aes(ymin = Estimate - s, ymax = Estimate + s), fill = "#00448822") +
scale_x_date(breaks = range(plot_data$Time)) +
scale_y_continuous(
breaks = c(0, range(plot_data$Estimate)),
labels = function(x) sprintf("%.2f USD", x)
)
p + line_theme(16, box=TRUE, grid="y")
